- Top-N 분석
	- Top-N 분석은 테이블에서 조건에 맞는 
	  최상위 레코드 n개 또는 최하위 레코드 n개를 조회하는 시나리오에 유용하다.
	  예) 회사의 최상위 소득자 3명, 가장 최근에 입사한 신입사원 4명,
	      최근 6개월동안 가장 많이 팔린 제품 3가지, 가장 평점이 높은 상품 10개
	- Top-N 분석 SQL문
	  select ROWNUM, 컬럼명, 컬럼명, ...
	  from (select 컬럼명, 컬럼명, ...
		from 테이블명
		[where 조건식]
		order by Top-N분석컬럼)
	  where ROWNUM <= N;
	  * ROWNUM : 조회된 순서대로 순번을 부여하는 오라클의 키워드다.
- 분석함수 사용하기
	- ROW_NUMBER() OVER() ([partition by 컬럼명] order by 컬럼명 [asc|desc]
		순번을 부여한다.
		* 특정 컬럼의 값을 기준으로 범위별로 나눠서 조회할 때 주로 사용된다.
	- RANK() OVER() ([partition by 컬럼명] order by 컬럼명 [asc|desc]
		랭킹을 부여한다.
	- DENSE_RANK() OVER() ([partition by 컬럼명] order by 컬럼명 [asc|desc]
		랭킹을 부여한다.
	- 분석함수 SQL 문
	select 컬럼명, 컬럼명, ...
	from (select ROW_NUMBER() OVER(order by 컬럼명) 별칭, 컬럼명, 컬럼명, ...
	      from 테이블명
	      [where 조건식])
	[where 별칭을 이용한 조건식]
- 시퀀스
	- 고유번호(일련번호)를 생성하는 데이터베이스 객체다.
	  * 고유번호를 자동으로 생성한다.
	  * 테이블의 기본 키 값으로 사용된다.
	  * 여러 사용자가 공유할 수 있다.
	- 시퀀스 생성
		CREATE SEQUENCE 시퀀스명;
			[START WITH n]			-- 기본값 1
			[INCREMENT BY n]		-- 기본값 1
			[{MAXVALUE n | NOMAXVALUE}]	-- 기본값 NOMAXVALUE
			[{MINVALUE n | NOMINVALUE}]	-- 기본값 NOMINVALUE
			[{CYCLE | NOCYCLE}]		-- 기본값 NOCYCLE
			[{CACHE n | NOCACHE}]		-- 기본값 CACHE 20
		* 아래의 옵션을 설정하지 않으면,1씩 증가, 1부터 시작, 캐시를 사용
	- 주요 함수
		nextval
			새로운 일련번호를 반환한다.
		currval
			현재 시퀀스의 일련번호값을 반환한다.
			currval을 실행하려면 해당 시퀀스에 대해서 nextval이 실행되어야 한다.
	- 시퀀스 삭제
		DROP SEQUENCE 시퀀스명;
	- 시퀀스 수정
		ALTER SEQUENCE 시퀀스명
			[INCREMENT BY n]
			[{MAXVALUE n | NOMAXVALUE}]
			[{MINVALUE n | NOMINVALUE}]
			[{CYCLE | NOCYCLE}]
			[{CACHE n | NOCACHE}]
		* START WITH n 값은 수정할 수 없다.
		* 시퀀스를 다른 번호로 다시 시작하려면 시퀀스를 삭제한 후 다시 생성해야 한다.
- 인덱스
	- SQL문의 검색 속도를 향상시키기 위해서 사용한다.
	- ROWID를 사용하여 데이터의 위치를 빠르게 찾을 수 있기 때문에 디스크 I/O를 줄일 수 있다.
	- 인덱스의 생성
		CREATE INDEX 인덱스명
		ON 테이블명 (컬럼명, ...);
		
		CREATE INDEX 인덱스명
		ON 테이블명 (연산식);
	- 인덱스의 생성 방법에 따른 구분
		* 자동 : 테이블 생성시 PRIMARY KEY 또는 UNIQUE 제약조건을 정의하면 
			 해당 컬럼에 대해서 인덱스가 자동으로 생성된다.
		* 수동 : CREATE INDEX 명령문을 사용해서 인덱스를 생성하는 것
	- 인덱스 생성이 필요한 경우
		* WHERE 절 또는 조인 조건에서 해당 컬럼이 자주 사용되는 경우
		* 컬럼에 다양한 값이 포함된 경우(사람의 이름, 이메일, 전화번호, ...)
		* 컬럼에 NULL 값이 많이 포함된 경우
		* 큰 테이블에서 실행되는 대부분의 SQL문에 대해서 2%내외의 행이 검색되는 경우
