- 트랜잭션 처리하기
	- 트랜잭션은 데이터의 일관성을 보장한다.
	- 트랜잭션은 여러번의 DML작업(INSERT, UPDATE, DELETE)을 하나의 논리적인 작업단위로 묶어준다.
	- 트랜잭션은 서로 관련있는 DML작업의 결과가 전부 데이터베이스에 반영되게 하거나,
	  전부 데이터베이스 반영이 취소되게 하기 위해서 사용되는 기능이다.
	- DML작업의 결과는 트랜잭션 단위로 데이터베이스 반영 및 취소가 일어난다.
	- 트랜잭션의 시작
		* 첫번째 DML SQL 문이 실행될 때 시작된다.
		* COMMIT 또는 ROLLBACK 명령어가 실행되는 경우 시작된다.
		* 시스템에 장애가 발생한 경우 시작된다.
		  - 트랜잭션의 시작 및 종료 예
			INSERT문 실행	--- 첫번째 트랜잭션 시작, 새로운 작업그룹(1번 작업그룹)이 시작, INSERT문의 실행결과가 1번 작업그룹에 포함
			INSERT문 실행	--- 실행결과가 1번 작업그룹에 포함
			SELECT문 실행	--- 해당사항없음
			UPDATE문 실행	--- 실행결과가 1번 작업그룹에 포함
			* 1번 작업그룸 -> INSERT, INSERT, UPDATE 작업결과가 포함되어 있음
			COMMIT 실행	--- 1번 작업그룹에 포함된 작업결과가 영구적으로 데이터베이스 반영, 첫번째 트랜잭션 종료, 두번째 트랜잭션 시작, 새로운 작업그룹(2번 작업그룹)이 시작
			UPDATE 문 실행	-- 실행결과가 2번 작업그룹에 포함
			INSERT문 실행	-- 실행결과가 2번 작업그룹에 포함
			INSERT문 실행	-- 실행결과가 2번 작업그룹에 포함
			CREATE문 실행	-- 해당사항 없음
			DROP문 실행	-- 해당사항 없음
			DELETE문 실행	-- 실행결과가 2번 작업그룹에 포함
			SELECT문 실행	-- 해당사항 없음
			* 2번 작업그룹 -> UPDATE, INSERT, INSERT, DELETE 작업결과가 포함되어 있음.
			ROLLBACK	-- 2번 작업그룹에 포함된 작업결과의 DB 반영이 전부 취소된다. 두번째 트랜잭션이 종료, 세번째 트랜잭션이 시작, 새로운 작업그룹(3번 작업그룹)이 시작
	- 트랜잭션 제어 명령어
			- COMMIT
				* 작업그룹에 포함된 모든 데이터 변경 내용을 영구적으로 데이터베이스 저장한다.
				* 현재 트랜잭션을 종료한다.
				* 새로운 트랜잭션을 시작한다.
			- SAVEPOINT name
				* 현재 트랜잭션 내에 저장지점을 표시한다.
			- ROLLBACK
				* 작업그룹에 포함된 모든 데이터 변경 내용을 버린다.
				* 현재 트랜잭션을 종료한다.
				* 새로운 트랜잭션을 시작한다.
			- ROLLBACK TO SAVEPOINT name
				* 현재 트랜잭션에 저장된 저장지점으로 롤백한다.
				* 저장지점 이후에 작업그룹에 포함된 모든 데이터 변경내용 및 저장지점을 버린다.
	- 트랜잭션 제어 명령어와 관련된 데이터 상태
			- COMMIT/ROLLBACK 실행 이전의 데이터 상태
				* 데이터를 이전 상태로 되돌릴 수 있다.
				* 현재 사용자는 SELECT문을 사용해서 DML 작업 결과를 확인할 수 있다.
				* 다른 사용자는 DML의 작업 결과를 확인할 수 없다.
				* 현재 사용자가 작업 중인 행들을 잠금처리하기 떄문에 다른 사용자는 그 행의 데이터를 변경할 수 없다.
			- COMMIT 실행 후
				* 데이터 변경 내용이 데이터베이스에 영구적으로 저장된다.
				* 모든 사용자가 변경내용을 조회할 수 있다.
				* 행 장금이 해제되어 다른 사용자가 행을 조작할 수 있다.
			- ROLLBACK 실행 후
				* 데이터 변경 내용이 전부 취소된다.
				* 데이터가 이전 상태로 복구된다.
				* 행 장금이 해제된다.
- 오라클의 주요 데이터베이스 객체
	* 데이터베이스 객체는 오라클이 제공하는 여러 유형의 데이터구조를 말한다.
	- 테이블
		* 데이터베이스의 기본 데이터 저장단위다.
		* 행과 열로 구분되어 있다.
	- 뷰
		* 가상의 테이블이다.
		* 하나 이상의 테이블에 데이터로 구성된 가상의 테이블이다.
	- 시퀀스
		* 일련번호 생성기다.
	- 인덱스
		* 데이터 조회 성능을 향상시켜준다.
		* 테이블의 데이터에 대한 색인을 가지고 있다.
	- 동의어
		* 데이터베이스 객체에 대한 다른 이름을 제공한다.

	- 오라클 데이터 타입
		-- 주로씀 --
		*VARCHAR2(size)
			- 가변 길이 문자 데이터
			- size : 1 ~ 400
			- 사람이름, 주소, 이메일, 상품이름 ,제목, ...
		* CHAR(size)
			- 고정길이 문자 데이터
			- size : 1 ~ 2000
			- 학번, 주민번호, 우편번호, 신용카드번호, ...
		* NUMBER(p,s)
			- 숫자 데이터
			- p는 총 숫자 갯수
			- s는 소숫점 이하 숫자 갯수
		* DATE	
			- 날짜 및 시간 데이터
		* CLOB(Character Large Object)
			- 대용량 가변길이 문자 데이터
			- 최대길이 4GB
			- 블로그의 글, 신문기사, 책의 내용, 나무위키의 글
		-- 잘 안씀 --
		* TIMESTAMP
			- 날짜 및 시간 데이터, 소숫점이하 초단위 값까지 저장
		* LONG
			- 가변길이 문자 데이터
			- 최대길이2GB
			- 단점
			  * 테이블당 하나만 사용할 수 있다.
			  * 제약조건을 정의할 수 없다.
		* BLOB(Binary Large Object)
			- 바이너리(이진)데이터
			- 최대길이 4GB
			- 사진,동영상,파일, ...
		* ROWID
			- 테이블에서 행(row)의 고유주소를 나타내는 64진수 숫자 데이터
			- ROWID는 오브젝트번호 + 상대파일번호 + 블록번호 + 데이터번호로 구성되어 있다.
			- 예 )
				AAAE64AAEAAAAFsAAA
				오브젝트번호 : AAAE64
				상대파일번호 : AAE
				블록번호 : AAAAFs
				데이터번호 : AAA
	- 테이블의 이름 변경하기
		RENAME 이전테이블명 TO 새테이블명;
	- ALTER TABLE 이용해 컬럼 추가/수정/삭제하기
		- 컬럼추가
			ALTER TABLE 테이블명
			ADD 컬럼명 데이터타입 [DEFAULT 값];
			* 컬럼명으로 지정한 새로운 컬럼이 추가된다.
		- 컬럼수정
			ALTER TABLE 테이블명
			MODIFY (컬럼명 데이터타입 [DEFAULT 값]);
			* 컬럼명으로 지정한 컬럼의 데이터타입, 길이, 기본값 등을 변경할 수 있다.
			* 기존에 저장된 데이터가 변경하려는 데이터타입과 맞지않거나,
			  기존에 저장된 데이터의 길이보다 컬럼의 사이즈를 짧게 변경하는 경우 에러가 발생한다.
		- 컬럼삭제
			ALTER TABLE 테이블명
			DROP 컬럼명;
			* 삭제된 컬럼은 복구할 수 없다.
	- 테이블 삭제하기
		DROP TABLE 테이블명
		* 삭제된 테이블은 복구할 수 없다.
		* 테이블의 모든 구조 및 데이터가 삭제됨.
		* 테이블의 모든 인덱스(색인)가 삭제됨
	- 테이블 절단하기
		TRUNCATE TABLE 테이블명
		* 테이블의 모든 행을 제거한다.
		* 해당 테이블이 사용하던 저장공간을 해제시킨다.
		* TRUNCATE를 사용한 행 제거작업은 복구할 수 없다.
- 무결성제약조건
	- 테이블에 유효하지 않은 데이터가 입력되는 것을 방지하기 위해서 정의하는 것이다.
	  * 테이블에 새로운 행이 추가될 때, 행의 값이 변경될 때, 행이 삭제될 때 마다 정의된 제약조건을 위배하지 않는지 검사한다.
	- 무결성제약조건의 종류
		----------------------------------------------------------------------------------------
		제약조건		설명
		----------------------------------------------------------------------------------------
		NOT NULL 		지정된 컬럼이 NULL값을 포함하지 못하도록 한다.
		----------------------------------------------------------------------------------------
		UNIQUE   		지정된 컬럼은 테이블의 모든 행에서 고유한 값을 가져야 한다.
					예) 주민번호, 이메일, 사용자아이디 등
		----------------------------------------------------------------------------------------
		PRIMARY KEY		지정된 컬럼은 테이블의 각 행을 고유하게 식별할 수 있어야 한다.
					지정된 컬럼은 고유한 값을 가져야 되고, NULL값을 포함할 수 없다
					테이블에서 행을 대표하는 컬럼에 PRIMARY KEY 제약조건을 정의함
					예) 학번, 사원번호, 부서번호 등
		----------------------------------------------------------------------------------------
	 	FOREIGN KEY		지정된 컬럼은 참조된 테이블의 컬럼과 외래키 관계를 설정한다.
					지정된 컬럼에 입력되는 값은 참조된 테이블의 컬럼에 존재하는
					값만 유효한 값으로 인정된다.
					예) 사원테이블의 부서아이디는 부서테이블의 부서아이디를 참조한다.