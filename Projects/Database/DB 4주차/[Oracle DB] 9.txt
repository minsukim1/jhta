- 사용자 엑세스 관리
	- 데이터베이스는 다중 사용자 환경이다.
	- 데이터베이스 엑세스 및 사용에 대한 보안 유지가 필요하다.
		* 데이터베이스 엑세스 제어
		* 데이터베이스 특정 객체에 대한 엑세스 제어
	- 권한
		* 특정 SQL문을 실행할 수 있는 권리
		* 데이터베이스 관리자는 사용자에게 데이터베이스 및 데이터베이스 객체에 대한 엑세스권한 부여할 수 있다.
		* 데이터베이스 객체의 주인은 다른 사용자가 데이터베이스 객체의 내용을 조작할 수 있는 권한을 부여할 수 있다.
		* 권한의 종류
			- 시스템 권한 : 데이터베이스를 엑세스할 수 있는 권한
			- 객체 권한 : 데이터베이스 객체의 내용을 조작할 수 있는 권한
	- 롤
		* 사용자에게 부여할 수 있는 관련 권한을 하나로 묶어 그룹화한 것
		* 롤을 사용하면 권한의 부여 및 박탈 등 유지관리가 쉬워진다.
		* 대표적인 롤
			- connect 롤
				데이터베이스에 연결할 수 있는 권한
				create session
			- resource 롤
				일반사용자에게 부여되는 관련 시스템권한의 묶음
				create table, create sequence, create view, ...
			- dba 롤
				데이터베이스 관리자에게 부여되는 관련 시스템권한의 묶음
				create user, drop user, grant, revoke, ...
	- 사용자 생성
		* 데이터베이스 관리자는 새로운 사용자를 생성할 수 있다.
		* CREATE USER 사용자명 IDENTIFIED BY 비밀번호;
	- 사용자에게 시스템 권한 부여하기
		* 데이터베이스 관리자는 사용자에게 시스템 권한을 부여할 수 있다.
		* GRANT 시스템권한, 시스템권한, 시스템권한, ...
		  TO 사용자명;
		* GRANT 룰, 룰, ...
		  TO 사용자명;
	- 사용자로부터 부여된 권한 박탈하기
		* 데이터베이스 관리자는 사용자가 가진 시스템 권한을 박탈할 수 있다.
		* REVOKE 시스템권한, 시스템권한, 시스템권한, ...
		  FROM 사용자명;
		* REVOKE 룰, 룰, ...
		  FROM 사용자명;
- 객체 권한 관리
	- 소유자는 객체에 대한 모든 권한을 갖는다.
	- 소유자는 자신의 객체에 대한 특정 권한을 다른 사용자에게 부여할 수 있다.
	- 데이터베이스 객체마다 다른 객체권한을 가지고 있다.
	- 객체권한의 종류
		------------------------------------------------------------------
		객체권한	테이블		뷰	시퀀스		프로시저
		------------------------------------------------------------------
		SELECT		O		O	O
		------------------------------------------------------------------
		INSERT		O		O
		------------------------------------------------------------------
		UPDATE		O		O
		------------------------------------------------------------------
		DELETE		O		O
		------------------------------------------------------------------
		ALTER		O			O
		------------------------------------------------------------------
		REFERENCES	O		O
		------------------------------------------------------------------
		EXECUTE							O
		------------------------------------------------------------------
	- 다른 사용자에게 객체권한 부여하기
		* GRANT 객체권한, 객체권한, 객체권한, ...
		  ON	객체명
		  TO	사용자명, 사용자명;
		* GRANT 객체권한, 객체권한, ...
		  ON 객체명
		  TO PUBLIC;
		  * 모든 사용자에게 엑세스 권한을 부여할 때 PUBLIC 키워드를 사용한다.
		* GRANT 객체권한, 객체권한, ...
		  ON 객체명
		  TO 사용자명, ...
		  WITH GRANT OPTION;
		  * 객체 권한을 부여받은 사용자에게 객체권한을 부여할 수 있는 권한을 제공한다.
	- 부여된 객체권한 취소하기
		* REVOKE 객체권한
		  ON 객체명
		  FROM 사용자명;
- 데이터베이스 사전테이블(Dictionary 테이블)
	* 데이터베이스 시스템이 데이터베이스 객체, 사용자, 제약조건 등의 정보를 보관하는 테이블
	* 주요 사전테이블
		- USER_TABLES		: 사용자가 생성한 모든 테이블 객체 정보
		- USER_VIEWS		: 사용자가 생성한 모든 뷰 객체 정보
		- USER_SEQUENCES	: 사용자가 생성한 모든 시퀀스 객체 정보
		- USER_CONSTRAINTS	: 사용자가 생성한 모든 제약조건 객체 정보
		- USER_INDEXES		: 사용자가 생성한 모든 색인 객체 정보
		- USER_SYNONYMS		: 사용자가 생성한 모든 동의어 객체 정보
		- USER_USERS		: 사용자의 정보
- 집합 연산자
	* 두 개 이상의 SELECT문의 조회 결거를 하나로 결합시킨다.
	* 종류
		- SQL1  UNION	  SQL2
			SQL1과 SQL2의 조회 결과를 중복을 제거한 후 반환한다.
		- SQL1  UNION ALL SQL2
			SQL1과 SQL2의 조회 결과를 중복을 포함하여 반환한다.
		- SQL1	INTERSECT SQL2
			SQL1과 SQL2의 조회결과에 공통으로 포함된 행만 반환한다.
		- SQL1	MINUS	  SQL2
			SQL1의 조회결과에서 SQL2의 조회결과를 제외한 행만 반환한다.
	* 집합 연산자 사용시 지침
		- SQL1과 SQL2의 컬럼 갯수가 동일해야 한다.
		- SQL1과 SQL2의 각각의 컬럼별 데이터타입이 동일해야 한다.
		- SQL1과 SQL2의 컬럼의 이름은 같지 않아도 상관없다.
		- UNION, UNION ALL, INTERSECT는 SQL1과 SQL2의 순서가 달라져도 결과가 동일하다.