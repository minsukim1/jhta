- 고급 서브쿼리
	- 다중 열 서브쿼리
		* 서브쿼리가 여러 행 및 여러 열을 반환한다.
		* SELECT COLUMN1, COLUMN2, ...
		  FROM TABLE
		  WHERE ((COLUMN, COLUMN) IN (SELECT COLUMN, COLUMN
					      FROM TABLE
					      WHERE 조건식)
		* 연산자는 IN을 사용한다.
	- 스칼라 서브쿼리
		* 스칼라 서브쿼리는 1행 1열의 값만 반환한다.
		* 스칼라 서브쿼리를 실행하면 값 하나가 획득된다.
		* 사용가능한 곳
			SELECT절, FROM절, WHERE절에서 연산자의 왼쪽,
			INSERT문의 VALUES절, UPDATE문의 SET절,
			CASE와 DECODE의 조건식 및 표현식
	- 상호관련 서브쿼리
		* 조회된 행의 단위로 서브쿼리가 사용된다.
		* 서브쿼리가 외부 쿼리의 모든 행에 대해서 한번씩 실행된다.
		* SELECT COLUMN, COLUMN, ...
		  FROM TABLE1 OUTER
		  WHERE COLUMN 연산자 (SELECT COLUMN
				       FROM TABLE2 INNER
				       WHERE INNER.COLUMN = OUTER.COLUMN)
	- EXISTS
		* 서브쿼리 실행결과 조회된 행이 있는지 여부를 확인하는 연산자다.
		* 서브쿼리 실행 중 조건을 만족하는 행이 존재하면 즉시 TRUE를 반환하고, 검색을 중단한다.
		* 서브쿼리에서는 값을 조회하는 것이 목적이 아니기 때문에 보통 상수값을 적는다.
		* EXISTS 연산자는 서브쿼리에서 행이 검색되면 TRUE값을 반환한다.
- 계층형 검색
	* 자료트리 구조의 가지는 데이터들 사이에 존재하는 관계를 찾아서 계층을 만들고,
	  부모->자식, 자손->부모 방향으로 데이터를 조회하는 것
	* SELECT [LEVEL], COLUMN, COLUMN, ...
	  FROM TABLE
	  [WHERE 조건식]
	  [START WITH 조건식]
	  [CONNECT BY PRIOR 조건식]
	  * LEVEL : 계층 검색에서 제공하는 컬럼, 각 행에 대해서 어느 계층에 속하는지를 숫자값으로 반환
	  * START WITH : 계층 검색의 시작점을 지정한다.
		START WITH EMPLOYEE_ID = 100
	  * CONNECT BY PRIOR : 부모-자식관계에 있는 컬럼을 지정한다.
		CONNECT BY PRIOR 부모키 = 자식키 : 위에서 아래로 검색
		CONNECT BY PRIOR 자식키 = 부모키 : 아래에서 위로 검색