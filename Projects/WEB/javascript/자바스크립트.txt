Javascript
	개요
		브라우저에서 실행되는 프로그램을 개발하는 프로그램 언어다.
		인터프리터 언어다.
		객체지향 프로그래밍 언어다.
		함수형 언어다.
	가능한 작업
		HTML 엘리먼트를 조작할 수 있다.
		HTML 엘리먼트의 속성을 조작할 수 있다.
		HTML 엘리먼트의 스타일(CSS)을 변경할 수 있다.
		사용자와 상호작용하는 프로그램을 작성할 수 있다.
		웹서버와 데이터교환(통신)하는 프로그램을 작성할 수 있다.(AJAX)
	웹페이지에 자바스크립트 포함시키기
		Internal javascript
			<head> 태그나 <body> 사이에 <script></script> 태그를 위치시키고 <script></script> 사이에 javascript 코드를 작성한다.
		External javascript
			<head> 태그나 <body> 사이에 <script src= “자바스크립트 소스파일”></script>를 추가하면 자바스크립트 소스를 포함시킬 수 있다.
변수의 자료형
	변수의 선언과 초기화
		변수의 선언
			var 변수명;
		변수의 선언과 초기화
			var 변수명 = 값;
		여러 개의 변수 한 번에 선언
			var 변수명, 변수명, 변수명, 변수명;
		여러 개의 변수 한 번에 선언과 초기화
			var 변수명 = 값, 변수명 = 값, 변수명 = 값;
			* 값의 타입이 달라서 상관없음
			* 초기화되지 않는 변수는 항상 undefined를 값으로 가진다.
	변수의 이름으로 사용가능한 문자
		영어대소문자, $, _, 숫자
		자바스크립트의 변수는 저장되는 값에 따라서 변수의 타입이 동적으로 변한다.
	자료형
		* 자료형의 종류
			string, number, boolean, undefined, array, object, function
		* string
			문자열
			var x = “안녕”; var x = ‘안녕’;
		* number
			정수, 실수
			var x = 10; var x = 3.14;
		* boolean
			true, false
			var x = true; var x = false;
			* 자바 스크립트에서 거짓으로 판정되는 것
				false, '', 0, undefined, null, NaN
			* 자바 스크립트에서 참으로 판정되는 것
				true, 위의 6개를 제외한 모든 값
		* undefined
			undefined
			var x;
		* array
			배열(자바의 List와 유사)
			var x = [10, 20, 30]; var x = [“김유신”, “강감찬”, “홍길동”];
			var x = [10, “홍길동”, “010-1234-5678”, false];
			* 서로 다른 타입의 값을 하나의 배열에 담을 수 있다.
			* 배열의 크기가 가변적이다.
		* object
			객체(자바의 Map과 유사)
			이름:값의 쌍으로 구성된다.
			var x = {name:”홍길동”, tel:”010-1234-5678”, married:false, age:40, careers:[‘편의점알바’, ‘건설현장’, ‘가구공장’], car:{name:’아반떼’, year:2018, distance:56000}}
			* 객체 생성을 위한 별도의 설계도가 필요하지 않다.
			* 객체의 구성요소를 프로그램 실행 중에 자유롭게 추가/삭제할 수 있다.
		* function
			함수(자바의 메소드와 유사)
			코드의 블록
			var x = function() {
			alert(“안녕”);
			}

	연산자
		산술 연산자
			+, -, *, /, %, ++, --

		대입 연산자
			=, +=, -=, *=, /=, %=

		비교 연산자
			==, ===, !=, !==, >, >=, <, <=
		논리 연산자
			&&, ||, !
		삼항 연산자
			? :
	함수
		스크립트 프로그램에서 자주 사용되는 코드를 재사용하기 위해서 정의하는 것
		자바스크립트의 함수는 부분적인 작업을 수행하도록 구현된 이름있는 코드블록이다.
		형식
			function 함수명(매개변수명, 매개변수명, 매개변수명, ...) {
				수행문;
				수행문;
			}
			* 반환타입을 정의하지 않는다.
			* 매개변수의 타입을 정의하지 않는다.
			* return 문이없는 모든 함수는 undefined를 반환한다.
			* return 문이 있는 함수는 해당 값을 반환한다.
			* 함수중복정의를 허용하지 않는다.
			* 함수를 반환값으로 사용할 수 있다. 매개변수로 전달할 수 있다. 변수에 저장할 수 있다.
		사용처
			이벤트가 발생했을 때 이벤트 처리
			자바스크립트 코드에서 함수에 구현된 기능을 사용하기 위해
			페이지로딩시 자동으로 실행될 작업의 구현을 위해
	배열
		같은 타입 혹은 서로 다른 타입의 값, 객체를 순서대로 저장하는 자료구조다.
		값이 저장되면 순서대로 인덱스가 부여된다.
		가변길이 배열이다.
		배열 생성 및 조작
			배열의 생성
			var x = [];	// 길이 0인 배열 생성
			var x = ["홍길동", "김유신", "강감찬"];
			배열의 값 조회
			var x = [10, 20, 30];
			console.log(x[0]);
			console.log(x[1]);
			배열의 값 변경 및 추가
			var x = [100];
			x[0] = 200;	// 배열의 0번째 값 변경
			x[1] = 500;	// 배열의 길이가 1증가되고, 배열의 1번째에 값 저장
			x[100] = 1000;  // 배열의 길이가 필요한 만큼 증가되고, 배열의 100번째에 값 저장
			배열의 길이 조회 및 변경
			var x = [100, 200, 300];
			var 배열의 길이 = x.length;
			x.length = 100;		// 배열의 길이가 100인 배열로 길이가 변함
	객체
		key:value의 쌍으로 구성된 값을 가진다.
		value는 숫자, 문자열, 불린값, 배열, 다른 객체, 함수 모두 가능하다.
		프로퍼티와 메소드를 가질 수 있다.
		key:value에서 value가 함수가 아닐 때 프로퍼티가 된다.
		key:value에서 value가 함수일 때 메소드가 된다.
		객체 생성 후에도 프로퍼티와 메소드를 자유롭게 추가/삭제할 수 있다.
		객체의 생성 및 조작
			객체 생성
			var x = {}; // 프로퍼티, 메소드가 없는 빈 객체
			var x = [tagName:"p", textContent:"안녕"]
			객체 생성후 프로퍼티 추가하기
			var x ={name:"홍길동"};
			x.name ="김유신";	// 프로퍼티가 존재하는 경우 값이 변경됨
			x.id = "kim";		// 프로퍼티가 없으면 새로 추가됨
			x["email"] = "kim@gamil.com" // [] 기호를 사용할 수 있다.
			객체의 구성요소(프로퍼티, 메소드) 삭제하기
			var x = {name:"홍길동", age:50};
			delete x.age; // x가 참조하는 객체의 age 프로퍼티를 삭제한다.
		생성자 함수를 이용한 객체 생성
			생성자 함수는 new 키워드와 같이 사용되는 함수다.
			생성자 함수는 다른 함수와 구별하기 위해 함수명을 대문자로 시작한다.
			생성자 함수는 객체의 구성요소를 함수안에서 정의하고 초기화한다.
			작성예
				function Employee() {
				
				}
			
				var emp1 = new Employee();
				var emp2 = new Employee();
				var emp3 = new Employee();
		